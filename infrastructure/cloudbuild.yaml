steps:
- name: 'gcr.io/${PROJECT_ID}/terraform'
  args: ['init', 
    '-backend-config=project=${PROJECT_ID}',
    '-backend-config=prefix=${_APP_NAME}-frontend',
    '-backend-config=bucket=${_BUCKET}',
    '-var-file=infrastructure/terraform/env.tfvars',
    'infrastructure/terraform'
  ]
  env:
    - "TF_VAR_project_id=${PROJECT_ID}"
    - "TF_VAR_state_bucket=${_BUCKET}"
    - "TF_VAR_app_name=${_APP_NAME}"
- name: 'gcr.io/${PROJECT_ID}/terraform'
  args: ['plan',
    '-var-file=infrastructure/terraform/env.tfvars',
    'infrastructure/terraform'
  ]
  env:
    - "TF_VAR_project_id=${PROJECT_ID}"
    - "TF_VAR_state_bucket=${_BUCKET}"
    - "TF_VAR_app_name=${_APP_NAME}"
- name: 'gcr.io/${PROJECT_ID}/terraform'
  args: ['apply',
    '-auto-approve',
    '-var-file=infrastructure/terraform/env.tfvars',
    'infrastructure/terraform'
  ]
  env:
    - "TF_VAR_project_id=${PROJECT_ID}"
    - "TF_VAR_state_bucket=${_BUCKET}"
    - "TF_VAR_app_name=${_APP_NAME}"
- name: 'gcr.io/cloud-builders/npm'
  args: ['ci']
- name: 'gcr.io/cloud-builders/npm'
  args: ['run', 'test']
  env:
    - "CI=true"
- name: 'gcr.io/cloud-builders/npm'
  args: ['run', 'build']
  env:
    - "CI=true"